{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER, LOGIN_USER_SUCCESS, LOGIN_USER_FAIL } from './types';\nexport const login = obj => {\n  return dispatch => {\n    dispatch({\n      type: LOGIN_USER\n    });\n    axios.post(`${process.env.REACT_APP_ENDPOINT}/auth`, obj).then(res => {\n      window.location.replace('/dashboard');\n      dispatch({\n        type: LOGIN_USER_SUCCESS,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(\"ERR: \", err.response);\n      dispatch({\n        type: LOGIN_USER_FAIL\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/martyguiao/acc/acc-frontend/src/actions/AuthActions.js"],"names":["axios","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","login","obj","dispatch","type","post","process","env","REACT_APP_ENDPOINT","then","res","window","location","replace","payload","data","catch","err","console","log","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,UADD,EAECC,kBAFD,EAGEC,eAHF,QAIO,SAJP;AAMA,OAAO,MAAMC,KAAK,GAAIC,GAAD,IAAS;AAC7B,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACAD,IAAAA,KAAK,CACAQ,IADL,CACW,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,OAD5C,EACoDN,GADpD,EAEEO,IAFF,CAEOC,GAAG,IAAI;AACZC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,YAAxB;AACAV,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,kBAAR;AAA4Be,QAAAA,OAAO,EAAEJ,GAAG,CAACK;AAAzC,OAAD,CAAR;AACA,KALF,EAMEC,KANF,CAMQC,GAAG,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAAG,CAACG,QAAzB;AACCjB,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEJ;AAAR,OAAD,CAAR;AACD,KATF;AAUA,GAZD;AAaA,CAdM","sourcesContent":["import axios from 'axios';\nimport {\n\tLOGIN_USER,\n\tLOGIN_USER_SUCCESS,\n  LOGIN_USER_FAIL\n} from './types';\n\nexport const login = (obj) => {\n\treturn dispatch => {\n\t\tdispatch({ type: LOGIN_USER });\n\t\taxios\n      .post(`${process.env.REACT_APP_ENDPOINT}/auth`, obj)\n\t\t\t.then(res => {\n\t\t\t\twindow.location.replace('/dashboard');\n\t\t\t\tdispatch({ type: LOGIN_USER_SUCCESS, payload: res.data });\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(\"ERR: \", err.response)\n\t\t\t\t\tdispatch({ type: LOGIN_USER_FAIL });\n\t\t\t});\n\t};\n};"]},"metadata":{},"sourceType":"module"}